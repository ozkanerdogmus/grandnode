@model TopMenuModel.CategoryLineModel
@using System.Web;
@if (Model.Category.IncludeInTopMenu)
{
    <li class="@(Model.Category.SubCategories.Count() == 0 ? "nav-item solo category": "nav-item dropdown category" ) @(Model.Category.IncludeInTopMenu ? "": "d-none") @(Model.Level == 0 ? "top-category": "")">
        @{
            var showImage = "";

            showImage = "showImage";

            if (!string.IsNullOrEmpty(Model.Category.FlagStyle) && Model.Category.FlagStyle == showImage)
            {
                <a class="img-container" href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })">
                    <img class="lazyload" data-src="@Model.Category.ImageUrl" alt="" title="" />
                </a>
            }
            else
            {

            }
        }
        <a id="@Model.Category.Id-menu" class="@(Model.Category.SubCategories.Count() == 0 ? "nav-link": "nav-link dropdown-toggle")  @(Model.Category.IncludeInTopMenu ? "": "")" @(Model.Category.SubCategories.Count() == 0 ? "" : "" ) href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })" @(Model.Category.SubCategories.Count() == 0 ? "" : "data-toggle=dropdown aria-haspopup=true aria-expanded=false" ) data-catid="@Model.Category.Id" onclick="$(this).toggleClass('opened')">
            @if (!string.IsNullOrEmpty(Model.Category.Icon))
            {
                <span class="category-icon lnr @Model.Category.Icon"></span>
                <span class="cat-name mobile-marg" title="@if (Model.Level == 0){@Model.Category.Name}">@Model.Category.Name</span>
            }
            else
            {
                <span class="cat-name"  title="@if (Model.Level == 0){@Model.Category.Name}">@Model.Category.Name</span>
            }
            @if (Model.Category.SubCategories.Count() > 0)
            {
                <span class="arrow lnr linearicons-chevron-right" aria-hidden="true"></span>
            }
            @*<span class="badge @Model.Category.FlagStyle"></span>*@
            @Html.Raw(@Model.Category.Flag)
        </a>
        @{
            //subcategories
            var subCategories =
                Model.Category.SubCategories.Where(x => x.IncludeInTopMenu).ToList();

            var levelClass = "";
            var gallery = "";
            var nogallery = "";
            if (Model.Level == 0)
            {
                levelClass = "first-level";
                gallery = "gallery";
                nogallery = "no-gallery";
                if (subCategories.Any())
                {
                    <ul class="dropdown-menu @levelClass @if (!string.IsNullOrEmpty(Model.Category.FlagStyle) && Model.Category.FlagStyle == gallery) { @gallery } else { @nogallery }" data-dropdownid="@Model.Category.Id" aria-labelledby="@Model.Category.Id-menu">
                        <li class="nav-item cat-back d-lg-none d-inline-flex">
                            <a class="nav-link justify-content-start align-items-center" onclick="$(this).parent().removeClass('show');">
                                <span class="lnr mr-1 linearicons-arrow-left"></span>
                                <span>@T("Mobile.Categories.Back")</span>
                            </a>
                        </li>
                        <li class="nav-item d-lg-none d-inline-flex sub-cat-name-container">
                            <a class="nav-link sub-cat-name" href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })">
                                <span><strong>@T("Mobile.Category.Show") @Model.Category.Name</strong></span>
                            </a>
                        </li>
                        @foreach (var subCategory in subCategories)
                        {
                            var categoryLineModel = new TopMenuModel.CategoryLineModel
                            {
                                Category = subCategory,
                                Level = Model.Level + 1,
                                ResponsiveMobileMenu = Model.ResponsiveMobileMenu
                            };
                            <partial name="_CategoryLine.TopMenu" model="categoryLineModel" />
                        }
                    </ul>
                }
            }
            if (Model.Level >= 1 && subCategories.Any())
            {
                levelClass = "next-level";
                <div class="sublist-toggle"></div>
                <ul class="dropdown-menu sublist @levelClass">
                    <li class="nav-item cat-back d-lg-none d-inline-flex">
                        <a class="nav-link justify-content-start align-items-center" onclick="$(this).parent().removeClass('show');">
                            <span class="lnr mr-1 linearicons-arrow-left"></span>
                            <span>@T("Mobile.Categories.Back")</span>
                        </a>
                    </li>
                    <li class="nav-item d-lg-none d-inline-flex sub-cat-name-container">
                        <a class="nav-link sub-cat-name" href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })">
                            <span><strong>@T("Mobile.Category.Show") @Model.Category.Name</strong></span>
                        </a>
                    </li>
                    @foreach (var subCategory in subCategories)
                    {
                        var categoryLineModel = new TopMenuModel.CategoryLineModel
                        {
                            Category = subCategory,
                            Level = Model.Level + 1,
                            ResponsiveMobileMenu = Model.ResponsiveMobileMenu
                        };
                        <partial name="_CategoryLine.TopMenu" model="categoryLineModel" />
                    }
                </ul>
            }
        }
    </li>
}
